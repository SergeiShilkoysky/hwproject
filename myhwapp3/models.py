"""–ó–∞–¥–∞–Ω–∏–µ ‚Ññ7
üìå –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á—É 8 –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞ –ø—Ä–æ –∫–ª–∏–µ–Ω—Ç–æ–≤,
—Ç–æ–≤–∞—Ä—ã –∏ –∑–∞–∫–∞–∑—ã.
üìå –°–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞ –∏
—Å–ø–∏—Å–∫–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –≤–Ω—É—Ç—Ä–∏ –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞.
üìå –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –º–∞—Ä—à—Ä—É—Ç –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ."""

"""üìå –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏ –∑–∞–∫–∞–∑–∞–º–∏.
üìå –°–æ–∑–¥–∞–π—Ç–µ —à–∞–±–ª–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö
–∫–ª–∏–µ–Ω—Ç–æ–º —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –≤—Å–µ—Ö –µ–≥–æ –∑–∞–∫–∞–∑–æ–≤ —Å —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–æ–π –ø–æ
–≤—Ä–µ–º–µ–Ω–∏:
‚óã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π (–Ω–µ–¥–µ–ª—é)
‚óã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π (–º–µ—Å—è—Ü)
‚óã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 365 –¥–Ω–µ–π (–≥–æ–¥)
üìå *–¢–æ–≤–∞—Ä—ã –≤ —Å–ø–∏—Å–∫–µ –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—Å—è."""

from django.db import models


class Client(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField()
    phone = models.CharField(max_length=100)
    address = models.CharField(max_length=100)
    date_reg = models.DateField(auto_now_add=True)
    is_active = models.BooleanField(default=True)

    # def __repr__(self):
    #     return (f'client <{self.name}>, email: <{self.email}>,'
    #             f' phone: <{self.phone}>, address: <{self.address}>')

    def __repr__(self):
        return (f'client <{self.name}>, email: <{self.email}>, phone: <{self.phone}>, address: <{self.address}>, '
                f'registered <{self.date_reg}>')


class Product(models.Model):
    name_product = models.CharField(max_length=100)
    description = models.TextField()
    price = models.DecimalField(max_digits=6, decimal_places=2)
    quantity = models.IntegerField(default=0)
    date_add = models.DateField()

    # def __repr__(self):
    #     return f'<prod_name: <{self.name_product}>, price: <{self.price}>, quantity: <{self.quantity}>'

    def __str__(self):
        return (f'name_prod: <{self.name_product}>,'
                f' description: <{self.description}>'
                f' price: <{self.price}>,'
                f' quantity: <{self.quantity}>,'
                f' manufacture date: <{self.date_add}>')


class Order(models.Model):
    client_store = models.ForeignKey(Client, on_delete=models.CASCADE)
    basket_products = models.ManyToManyField(Product)
    order_total = models.DecimalField(max_digits=6, decimal_places=2, default=0)
    # date_ordered = models.DateField(auto_now_add=True)
    date_ordered = models.DateField()
    date_change = models.DateField(auto_now=True)
    is_active = models.BooleanField(default=True)

    # def __str__(self):
    #     return (f' –∑–∞–∫–∞–∑ ‚Ññ_{self.pk}, client: <{self.client_store.name}>,'
    #             f' basket_products: <{list(map(str, self.basket_products.all()))}>,'
    #             f' order_total: <{self.order_total}>,'
    #             f' date_ordered: <{self.date_ordered}>')

    def __str__(self):
        return f'{list(map(str, self.basket_products.all()))}'


class BasketProduct(models.Model):
    order_client = models.ForeignKey(Order, on_delete=models.CASCADE)
    product = models.ForeignKey(Product, on_delete=models.CASCADE)
    # products = models.ManyToManyField(Product)
    quantity = models.IntegerField(default=0)

    def __str__(self):
        return (f'{self.order_client.primary_key}:'
                f' {self.product.name} - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {self.quantity}) ')
